#!/usr/bin/env bash
set -u
set -e

DL_VERSION=24
DL_DIR="/var/log/dailylog"
DL_DAILY_FILE="${DL_DIR}/daily.log"

emph() {
  echo "\033[1m${*}\033[0m"
}

die() {
  echo -e "${*}" && exit 0
}

die_error() {
  echo "" && echo -e "$(emph "ERROR:") ${*}" && echo "" && exit 0
}

year_dir() {
  echo "${DL_DIR}/$(date +%Y)"
}

weekly_log_file() {
  echo "$(year_dir)/$(date +%V).log"
}

create_dir() {
  [[ -d "${1}" ]] || sudo mkdir -p "${1}"
  sudo chmod 777 "${1}"
  echo "create_dir: ${1}"
}

create_file() {
  [[ -f "${1}" ]] || touch "${1}"
  # chown ${dl_user_name}:${dl_user_name} "${file_path}"
  # sudo chmod 777 "${1}"
}

recreate_dailylog() {
  rm -rf "${DL_DAILY_FILE}" && create_file "${DL_DAILY_FILE}"
}

show_weekly_log() {
  local LOG_FILE="$(weekly_log_file)" && echo -e "${LOG_FILE}\n" && tail "${LOG_FILE}"
}

print_help() {
  echo -e "

usage: dailylog <text> [<argument>]

    $(emph "--label") label    The label of the log message.
    $(emph "--level") level    The level of the log message.

    $(emph "--error")          Sets the level to ERRO.
    $(emph "--warning")        Sets the level to WARN.
    $(emph "--info")           Sets the level to INFO.
    $(emph "--error")          Sets the level to ERRO.

    $(emph "--remove | -r")    Removes the dailylog file.
    $(emph "--week")           Shows the weekly log.
    $(emph "--quite")          Do not print message on console.
    $(emph "--dry")            Do not write message to files.
    $(emph "--help | -h")      Prints this help and exists.

example of log message:

"
}

if [ "${#}" -eq "0" ]; then
  [[ -f "${DL_DAILY_FILE}" ]] || die_error "file ${DL_DAILY_FILE} not existing"
  tail "${DL_DAILY_FILE}" && exit 0
fi

DL_DATE="$(date '+%Y%m%d %H:%M:%S.%4N')"
DL_DATE="$(date '+%H:%M:%S.%4N')"
DL_LABEL=""
DL_LEVEL=""
DL_ARGUMENTS=""

DL_QUIET=""
DL_DRY=""

while (($# > 0)); do
  opt="${1}"
  shift
  case $opt in
  --label | -b)
    DL_LABEL="${1}"
    shift
    ;;
  --level | -l)
    DL_LEVEL="${1}"
    shift
    ;;
  --error | -e)
    DL_LEVEL="ERRO"
    ;;
  --warning | -w)
    DL_LEVEL="WARN"
    ;;
  --info | -i)
    DL_LEVEL="INFO"
    ;;
  --dry | -d)
    DL_DRY="1"
    ;;
  --quite | -q)
    DL_QUIET="1"
    ;;
  --week | -w)
    show_weekly_log && exit 0
    ;;
  --remove | -r)
    recreate_dailylog && exit 0
    ;;
  --help | -h)
    print_help && exit 0
    ;;
  --status | -s)
    print_status && exit 0
    ;;
  *)
    DL_ARGUMENTS="${DL_ARGUMENTS} ${opt}"
    ;;
  esac
done

# create base dir (if not existing)
[[ -d "${DL_DIR}" ]] || create_dir "${DL_DIR}"

# create dailylog file (if not existing)
[[ -f "${DL_DAILY_FILE}" ]] || create_file "${DL_DAILY_FILE}"

# build log message
DL_MESSAGE="${DL_DATE}"

# append label to message
[[ "${DL_LABEL}" == "" ]] || DL_MESSAGE="${DL_MESSAGE} ::  [${DL_LABEL}]"

[[ "${DL_LEVEL}" == "" ]] && (DL_LEVEL="    ")
DL_MESSAGE="${DL_MESSAGE} : [${DL_LEVEL}]"
DL_MESSAGE="${DL_MESSAGE} : ${DL_ARGUMENTS}"

# year directory
DL_YEAR_DIR="$(year_dir)"
[[ -d "${DL_YEAR_DIR}" ]] || create_dir "${DL_YEAR_DIR}"

# weekly log
DL_WEEK_LOG="$(weekly_log_file)"
[[ -f "${DL_WEEK_LOG}" ]] || create_file "${DL_WEEK_LOG}"

# print message on console (if not set to quite)
[[ "${DL_QUIET}" == "1" ]] || echo "${DL_MESSAGE}"

# append message to daily log file
[[ "${DL_DRY}" == "1" ]] || echo "${DL_MESSAGE}" >>"${DL_DAILY_FILE}"

# append message to weekly log file
[[ "${DL_DRY}" == "1" ]] || echo "${DL_MESSAGE}" >>"${DL_WEEK_LOG}"
